/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.contenttargeting.reports.campaigntrackingaction.service.base;

import com.liferay.contenttargeting.reports.campaigntrackingaction.model.CampaignTrackingAction;
import com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionService;
import com.liferay.contenttargeting.reports.campaigntrackingaction.service.persistence.CampaignTrackingActionFinder;
import com.liferay.contenttargeting.reports.campaigntrackingaction.service.persistence.CampaignTrackingActionPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the campaign tracking action remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.contenttargeting.reports.campaigntrackingaction.service.impl.CampaignTrackingActionServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.contenttargeting.reports.campaigntrackingaction.service.impl.CampaignTrackingActionServiceImpl
 * @see com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionServiceUtil
 * @generated
 */
public abstract class CampaignTrackingActionServiceBaseImpl
	extends BaseServiceImpl implements CampaignTrackingActionService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionServiceUtil} to access the campaign tracking action remote service.
	 */

	/**
	 * Returns the campaign tracking action local service.
	 *
	 * @return the campaign tracking action local service
	 */
	public com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionLocalService getCampaignTrackingActionLocalService() {
		return campaignTrackingActionLocalService;
	}

	/**
	 * Sets the campaign tracking action local service.
	 *
	 * @param campaignTrackingActionLocalService the campaign tracking action local service
	 */
	public void setCampaignTrackingActionLocalService(
		com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionLocalService campaignTrackingActionLocalService) {
		this.campaignTrackingActionLocalService = campaignTrackingActionLocalService;
	}

	/**
	 * Returns the campaign tracking action remote service.
	 *
	 * @return the campaign tracking action remote service
	 */
	public com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionService getCampaignTrackingActionService() {
		return campaignTrackingActionService;
	}

	/**
	 * Sets the campaign tracking action remote service.
	 *
	 * @param campaignTrackingActionService the campaign tracking action remote service
	 */
	public void setCampaignTrackingActionService(
		com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionService campaignTrackingActionService) {
		this.campaignTrackingActionService = campaignTrackingActionService;
	}

	/**
	 * Returns the campaign tracking action persistence.
	 *
	 * @return the campaign tracking action persistence
	 */
	public CampaignTrackingActionPersistence getCampaignTrackingActionPersistence() {
		return campaignTrackingActionPersistence;
	}

	/**
	 * Sets the campaign tracking action persistence.
	 *
	 * @param campaignTrackingActionPersistence the campaign tracking action persistence
	 */
	public void setCampaignTrackingActionPersistence(
		CampaignTrackingActionPersistence campaignTrackingActionPersistence) {
		this.campaignTrackingActionPersistence = campaignTrackingActionPersistence;
	}

	/**
	 * Returns the campaign tracking action finder.
	 *
	 * @return the campaign tracking action finder
	 */
	public CampaignTrackingActionFinder getCampaignTrackingActionFinder() {
		return campaignTrackingActionFinder;
	}

	/**
	 * Sets the campaign tracking action finder.
	 *
	 * @param campaignTrackingActionFinder the campaign tracking action finder
	 */
	public void setCampaignTrackingActionFinder(
		CampaignTrackingActionFinder campaignTrackingActionFinder) {
		this.campaignTrackingActionFinder = campaignTrackingActionFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return CampaignTrackingAction.class;
	}

	protected String getModelClassName() {
		return CampaignTrackingAction.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = campaignTrackingActionPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionLocalService.class)
	protected com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionLocalService campaignTrackingActionLocalService;
	@BeanReference(type = com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionService.class)
	protected com.liferay.contenttargeting.reports.campaigntrackingaction.service.CampaignTrackingActionService campaignTrackingActionService;
	@BeanReference(type = CampaignTrackingActionPersistence.class)
	protected CampaignTrackingActionPersistence campaignTrackingActionPersistence;
	@BeanReference(type = CampaignTrackingActionFinder.class)
	protected CampaignTrackingActionFinder campaignTrackingActionFinder;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
}